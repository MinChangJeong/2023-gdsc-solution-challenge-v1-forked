spring:
  datasource:
    hikari:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: ${datasource-url}
      username: ${datasource-username}
      password: ${datasource-password}
  session:
    jdbc:
      initialize-schema: always

#    redis:
#      host: ${redis-host}
#      port: ${redis-port}

  mybatis:
    configuration:
      multiple-result-sets-enabled: false
      map-underscore-to-camel-case: true
      call-setters-on-nulls: true
      jdbc-type-for-null: varchar
      default-fetch-size: 500

  cloud:
    gcp:
      storage:
        credentials:
          location: ${gcp-key-location}

app:
  cors:
    # comma (',') seperated list of allowed origins for CORS
    allowed-origins: http://localhost

server:
  port: 8080

# Actuator(모니터링 기능) Endpoint 설정
management:
  endpoint:
    web:
      exposure:
        # 1. /health -> application의 건강 상태 정보 반환
        # 2. /info -> application 정보 반환
        # 3. / prometheus -> endpoint 지점
        include: health, info, prometheus


